class Strategy(object):
    """Mealy transducer.

    Internal states are integers, the current state
    is stored in the attribute "state".
    To take a transition, call method "move".

    The names of input variables are stored in the
    attribute "input_vars".

    Automatically generated by tulip.dumpsmach on 2023-09-09 06:36:20 UTC
    To learn more about TuLiP, visit http://tulip-control.org
    """
    def __init__(self):
        self.state = 13
        self.input_vars = ['vh', 'light']

    def move(self, vh, light):
        """Given inputs, take move and return outputs.

        @rtype: dict
        @return: dictionary with keys of the output variable names:
            ['a8', 'a9', 'a4', 'a7', 'loc']
        """
        output = dict()
        if self.state == 0:
            if (vh == 2) and (light == 'g'):
                self.state = 0

                output["a8"] = False
                output["a9"] = False
                output["a4"] = False
                output["a7"] = True
                output["loc"] = 'c7'
            elif (vh == 3) and (light == 'g'):
                self.state = 1

                output["a8"] = False
                output["a9"] = False
                output["a4"] = False
                output["a7"] = True
                output["loc"] = 'c7'
            elif (vh == 2) and (light == 'y'):
                self.state = 2

                output["a8"] = False
                output["a9"] = False
                output["a4"] = False
                output["a7"] = True
                output["loc"] = 'c7'
            elif (vh == 3) and (light == 'y'):
                self.state = 3

                output["a8"] = False
                output["a9"] = False
                output["a4"] = False
                output["a7"] = True
                output["loc"] = 'c7'
            else:
                self._error(vh, light)
        elif self.state == 1:
            if (vh == 4) and (light == 'g'):
                self.state = 5

                output["a8"] = True
                output["a9"] = False
                output["a4"] = False
                output["a7"] = False
                output["loc"] = 'c8'
            elif (vh == 3) and (light == 'g'):
                self.state = 1

                output["a8"] = False
                output["a9"] = False
                output["a4"] = False
                output["a7"] = True
                output["loc"] = 'c7'
            elif (vh == 3) and (light == 'y'):
                self.state = 3

                output["a8"] = False
                output["a9"] = False
                output["a4"] = False
                output["a7"] = True
                output["loc"] = 'c7'
            else:
                self._error(vh, light)
        elif self.state == 2:
            if (vh == 2) and (light == 'r'):
                self.state = 12

                output["a8"] = False
                output["a9"] = False
                output["a4"] = False
                output["a7"] = True
                output["loc"] = 'c7'
            elif (vh == 3) and (light == 'r'):
                self.state = 4

                output["a8"] = False
                output["a9"] = False
                output["a4"] = False
                output["a7"] = True
                output["loc"] = 'c7'
            else:
                self._error(vh, light)
        elif self.state == 3:
            if (vh == 3) and (light == 'r'):
                self.state = 4

                output["a8"] = False
                output["a9"] = False
                output["a4"] = False
                output["a7"] = True
                output["loc"] = 'c7'
            else:
                self._error(vh, light)
        elif self.state == 4:
            if (vh == 4) and (light == 'g'):
                self.state = 5

                output["a8"] = True
                output["a9"] = False
                output["a4"] = False
                output["a7"] = False
                output["loc"] = 'c8'
            elif (vh == 3) and (light == 'g'):
                self.state = 1

                output["a8"] = False
                output["a9"] = False
                output["a4"] = False
                output["a7"] = True
                output["loc"] = 'c7'
            elif (vh == 3) and (light == 'r'):
                self.state = 4

                output["a8"] = False
                output["a9"] = False
                output["a4"] = False
                output["a7"] = True
                output["loc"] = 'c7'
            else:
                self._error(vh, light)
        elif self.state == 5:
            if (vh == 4) and (light == 'g'):
                self.state = 5

                output["a8"] = True
                output["a9"] = False
                output["a4"] = False
                output["a7"] = False
                output["loc"] = 'c8'
            elif (vh == 5) and (light == 'g'):
                self.state = 6

                output["a8"] = False
                output["a9"] = False
                output["a4"] = True
                output["a7"] = False
                output["loc"] = 'c4'
            elif (vh == 5) and (light == 'y'):
                self.state = 7

                output["a8"] = False
                output["a9"] = False
                output["a4"] = True
                output["a7"] = False
                output["loc"] = 'c4'
            else:
                self._error(vh, light)
        elif self.state == 6:
            if (vh == 6) and (light == 'g'):
                self.state = 9

                output["a8"] = False
                output["a9"] = True
                output["a4"] = False
                output["a7"] = False
                output["loc"] = 'c9'
            elif (vh == 6) and (light == 'y'):
                self.state = 10

                output["a8"] = False
                output["a9"] = True
                output["a4"] = False
                output["a7"] = False
                output["loc"] = 'c9'
            elif (vh == 5) and (light == 'g'):
                self.state = 6

                output["a8"] = False
                output["a9"] = False
                output["a4"] = True
                output["a7"] = False
                output["loc"] = 'c4'
            elif (vh == 5) and (light == 'y'):
                self.state = 7

                output["a8"] = False
                output["a9"] = False
                output["a4"] = True
                output["a7"] = False
                output["loc"] = 'c4'
            else:
                self._error(vh, light)
        elif self.state == 7:
            if (vh == 6) and (light == 'r'):
                self.state = 8

                output["a8"] = False
                output["a9"] = False
                output["a4"] = True
                output["a7"] = False
                output["loc"] = 'c4'
            else:
                self._error(vh, light)
        elif self.state == 8:
            if (vh == 6) and (light == 'g'):
                self.state = 9

                output["a8"] = False
                output["a9"] = True
                output["a4"] = False
                output["a7"] = False
                output["loc"] = 'c9'
            elif (vh == 6) and (light == 'r'):
                self.state = 8

                output["a8"] = False
                output["a9"] = False
                output["a4"] = True
                output["a7"] = False
                output["loc"] = 'c4'
            else:
                self._error(vh, light)
        elif self.state == 9:
            if (vh == 6) and (light == 'g'):
                self.state = 9

                output["a8"] = False
                output["a9"] = True
                output["a4"] = False
                output["a7"] = False
                output["loc"] = 'c9'
            elif (vh == 6) and (light == 'y'):
                self.state = 10

                output["a8"] = False
                output["a9"] = True
                output["a4"] = False
                output["a7"] = False
                output["loc"] = 'c9'
            else:
                self._error(vh, light)
        elif self.state == 10:
            if (vh == 6) and (light == 'r'):
                self.state = 11

                output["a8"] = False
                output["a9"] = True
                output["a4"] = False
                output["a7"] = False
                output["loc"] = 'c9'
            else:
                self._error(vh, light)
        elif self.state == 11:
            if (vh == 6) and (light == 'g'):
                self.state = 9

                output["a8"] = False
                output["a9"] = True
                output["a4"] = False
                output["a7"] = False
                output["loc"] = 'c9'
            elif (vh == 6) and (light == 'r'):
                self.state = 11

                output["a8"] = False
                output["a9"] = True
                output["a4"] = False
                output["a7"] = False
                output["loc"] = 'c9'
            else:
                self._error(vh, light)
        elif self.state == 12:
            if (vh == 2) and (light == 'g'):
                self.state = 0

                output["a8"] = False
                output["a9"] = False
                output["a4"] = False
                output["a7"] = True
                output["loc"] = 'c7'
            elif (vh == 2) and (light == 'r'):
                self.state = 12

                output["a8"] = False
                output["a9"] = False
                output["a4"] = False
                output["a7"] = True
                output["loc"] = 'c7'
            elif (vh == 3) and (light == 'g'):
                self.state = 1

                output["a8"] = False
                output["a9"] = False
                output["a4"] = False
                output["a7"] = True
                output["loc"] = 'c7'
            elif (vh == 3) and (light == 'r'):
                self.state = 4

                output["a8"] = False
                output["a9"] = False
                output["a4"] = False
                output["a7"] = True
                output["loc"] = 'c7'
            else:
                self._error(vh, light)
        elif self.state == 13:
            if (vh == 2) and (light == 'g'):
                self.state = 0

                output["a8"] = False
                output["a9"] = False
                output["a4"] = False
                output["a7"] = True
                output["loc"] = 'c7'
            else:
                self._error(vh, light)
        else:
            raise Exception("Unrecognized internal state: " + str(self.state))
        return output

    def _error(self, vh, light):
        raise ValueError("Unrecognized input: " + (
            "vh = {vh}; "
            "light = {light}; ").format(
                vh=vh,
                light=light))
